# EKS Module Outputs

output "cluster_id" {
  description = "The name/id of the EKS cluster"
  value       = aws_eks_cluster.main.id
}

output "cluster_arn" {
  description = "The Amazon Resource Name (ARN) of the cluster"
  value       = aws_eks_cluster.main.arn
}

output "cluster_endpoint" {
  description = "Endpoint for EKS control plane"
  value       = aws_eks_cluster.main.endpoint
}

output "cluster_version" {
  description = "The Kubernetes version for the EKS cluster"
  value       = aws_eks_cluster.main.version
}

output "cluster_platform_version" {
  description = "Platform version for the EKS cluster"
  value       = aws_eks_cluster.main.platform_version
}

output "cluster_status" {
  description = "Status of the EKS cluster. One of `CREATING`, `ACTIVE`, `DELETING`, `FAILED`"
  value       = aws_eks_cluster.main.status
}

output "cluster_certificate_authority_data" {
  description = "Base64 encoded certificate data required to communicate with the cluster"
  value       = aws_eks_cluster.main.certificate_authority[0].data
}

output "cluster_security_group_id" {
  description = "Security group ID attached to the EKS cluster"
  value       = try(aws_security_group.cluster[0].id, "")
}

output "cluster_security_group_arn" {
  description = "Amazon Resource Name (ARN) of the cluster security group"
  value       = try(aws_security_group.cluster[0].arn, "")
}

output "cluster_iam_role_name" {
  description = "IAM role name associated with EKS cluster"
  value       = aws_iam_role.cluster.name
}

output "cluster_iam_role_arn" {
  description = "IAM role ARN associated with EKS cluster"
  value       = aws_iam_role.cluster.arn
}

output "cluster_oidc_issuer_url" {
  description = "The URL on the EKS cluster for the OpenID Connect identity provider"
  value       = aws_eks_cluster.main.identity[0].oidc[0].issuer
}

output "cluster_vpc_config" {
  description = "VPC configuration of the cluster"
  value       = aws_eks_cluster.main.vpc_config
}

output "cluster_enabled_log_types" {
  description = "The enabled control plane logs"
  value       = aws_eks_cluster.main.enabled_cluster_log_types
}

output "node_groups" {
  description = "Map of attribute maps for all EKS managed node groups created"
  value       = aws_eks_node_group.main
}

output "node_group_iam_role_name" {
  description = "IAM role name associated with EKS node groups"
  value       = try(aws_iam_role.node_group[0].name, "")
}

output "node_group_iam_role_arn" {
  description = "IAM role ARN associated with EKS node groups"
  value       = try(aws_iam_role.node_group[0].arn, "")
}

output "node_group_security_group_id" {
  description = "Security group ID attached to the EKS node groups"
  value       = try(aws_security_group.node_group[0].id, "")
}

output "node_group_security_group_arn" {
  description = "Amazon Resource Name (ARN) of the node group security group"
  value       = try(aws_security_group.node_group[0].arn, "")
}

output "cluster_addons" {
  description = "Map of attribute maps for all EKS cluster addons enabled"
  value       = aws_eks_addon.main
}

output "kms_key_id" {
  description = "The KMS key ID used for cluster encryption"
  value       = try(aws_kms_key.eks[0].key_id, "")
}

output "kms_key_arn" {
  description = "The KMS key ARN used for cluster encryption"
  value       = try(aws_kms_key.eks[0].arn, "")
}

output "kms_alias_name" {
  description = "The KMS alias name"
  value       = try(aws_kms_alias.eks[0].name, "")
}

output "kms_alias_arn" {
  description = "The KMS alias ARN"
  value       = try(aws_kms_alias.eks[0].arn, "")
}

# Outputs for kubectl configuration
output "cluster_name" {
  description = "The name of the EKS cluster"
  value       = aws_eks_cluster.main.name
}

output "cluster_region" {
  description = "The AWS region where the cluster is deployed"
  value       = data.aws_caller_identity.current.account_id
}

output "kubectl_config" {
  description = "kubectl config as generated by the module"
  value = {
    cluster_name                     = aws_eks_cluster.main.name
    endpoint                         = aws_eks_cluster.main.endpoint
    certificate_authority_data       = aws_eks_cluster.main.certificate_authority[0].data
    cluster_security_group_id        = try(aws_security_group.cluster[0].id, "")
    node_group_security_group_id     = try(aws_security_group.node_group[0].id, "")
  }
}

# Outputs for monitoring and logging
output "cloudwatch_log_group_name" {
  description = "Name of cloudwatch log group created"
  value       = "/aws/eks/${aws_eks_cluster.main.name}/cluster"
}

output "cluster_primary_security_group_id" {
  description = "The cluster primary security group ID created by EKS"
  value       = aws_eks_cluster.main.vpc_config[0].cluster_security_group_id
}
